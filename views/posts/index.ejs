<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="/css/index.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css"
        integrity="sha512-DTOQO9RWCH3ppGqcWaEA1BIZOC6xxalwEsw9c2QQeAIftl+Vegovlnee1c9QX4TctnWMn13TZye+giMm8e2LwA=="
        crossorigin="anonymous" referrerpolicy="no-referrer" />
    <link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=Nunito:ital,wght@0,200;0,300;0,400;0,500;0,600;0,900;1,700&display=swap" rel="stylesheet">    
    <title>Snapify</title>
</head>

<body>
    <div class="container">
        <nav>
            <a href="/" class="logo">
                <img src="/images/snapifyy.png" alt="">
            </a>
            <div class="name">
                 <img src="/images/appLogo2.png" alt=""> 
            </div>
        </nav>
        <% if (success && success.length > 0) { %>
        <div id="customSuccessAlert">
            <div id="icon"><i class="fa-solid fa-circle-check"></i></div>
            <p><%=success%></p>
        </div>
        <% } %>
        <div class="content">
            <% for(let post of allPosts.reverse()){ %>
            <div class="post">
                <div class="p-user">
                    <a href="/profile/<%=post.owner._id%>" class="userDetails">
                        <div class="user-dp"><img src="<%= post.owner.dp.url  %>" alt="User's DP"></div>
                        <p class="username">
                            <%= post.owner.name %>
                        <% if (post.owner.id === "65b653e15acff8a5350515ed" || post.owner.id === "65b65ee057a34358b20b1c1c") { %>
                      <i class="fa-solid fa-circle-check"></i>
                    <% } %>
                        </p>
                    </a>

                    <div class="userOption">
                        <i class="popup fa-solid fa-ellipsis-vertical"></i>
                        <div class="EDoptions">
                            <a href="/posts/<%=post._id%>"><i class="fa-solid fa-info-circle"></i></a>

                            <!--Only post owner can edit or delete-->
                            <% if (currentUser && currentUser._id.equals(post.owner._id)) { %>
                            <a href="/posts/<%=post._id%>/edit"><i class="fa-solid fa-pencil"></i></a>
                            <form method="post" action="/posts/<%=post._id%>?_method=delete">
                                <button type="submit"><i class="fa-solid fa-trash-can"></i></button>
                            </form>
                            <% } %>

                            <i class="cross fa-regular fa-circle-xmark"></i>
                        </div>
                    </div>
                </div>
                <div href="/posts/<%= post._id  %>" class="p-image">
                    <img src="<%=post.image.postUrl%>" alt="">
                    <div class="commentOption">
                        <i class="commentCross fa-regular fa-circle-xmark"></i>
                        <form action="/posts/<%=post._id%>/comments" method="post">
                            <div class="field">
                                <label for="comment[text]">Comment</label>
                                <textarea name="comment[text]" id="comment" cols="26" rows="5"
                                    placeholder="Write comment here..." required spellcheck="false"></textarea>
                            </div>
                            <button><i class="fa-solid fa-paper-plane"></i></button>
                        </form>
                    </div>
                </div>
                <div class="p-description">
                    <p><%=post.caption%></p>
                </div>

                <!--Like and comment part-->
                <div class="p-reactions">
                     <a href="#" class="like-button" data-post-id="<%= post._id %>">
        <% if (post.likes.indexOf(currentUser._id) !== -1) { %>
        <img src="/images/give-love.png" alt="Liked" style="width: 9vw;">
        <% } else { %>
        <img src="/images/give-love.png" alt="Like" style="width: 9vw;">
        <% } %>
    </a>
                    <!-- <a href="#"><i class="commentIcon fa-regular fa-comment"></i></a> -->
                    <img src="/images/comments.png" class="commentIcon fa-regular fa-comment" style="width: 9vw;">
                </div>
                <div class="p-likes-comments">
                    <p id="like-count-<%= post._id %>"><%= post.likes.length %>
                     <% if (post.likes.length === 1) { %>
                        Like
                     <% } else { %>
                        Likes
                    <% } %>  
                    </p>
                    <p><%= post.comments.length %>
                     <% if (post.comments.length === 1) { %>
                        Comment
                     <% } else { %>
                        Comments
                    <% } %>  
                    </p>
                </div>
            </div>
            <% } %>
        </div>
<footer>
    <div class="f-icons">
        <a href="/posts"><img src="/images/homepage.png" alt="Home"></a>
        <a href="/users"><img src="/images/search.png" alt="Home"></a>
        <a href="/posts/new"><img src="/images/add-button.png" alt="New Post"></a>
        <a href="/profile/<%=currentUser._id%>"><img src="/images/profile-icon.png" alt="Profile"></a>
    </div>
</footer>

    </div>
    <script>
        document.addEventListener('DOMContentLoaded', function () {

            // Other logic for icons, alert div, and comment window
            var icons = document.querySelectorAll('.popup');
            var opts = document.querySelectorAll('.EDoptions');
            var crosses = document.querySelectorAll('.cross');

            icons.forEach((icon, index) => {
                icon.addEventListener('click', () => {
                    icon.style.display = 'none';
                    opts[index].style.display = 'flex';
                });
                crosses[index].addEventListener('click', () => {
                    icon.style.display = 'inline-block';
                    opts[index].style.display = 'none';
                });
            });

            setTimeout(function () {
                var customSuccessAlert = document.getElementById('customSuccessAlert');
                if (customSuccessAlert) {
                    customSuccessAlert.remove();
                }
            }, 2500);

            const toggleCommentDisplay = (commentOption) => {
                commentOption.style.display = (commentOption.style.display === 'none' ||
                    commentOption.style.display === '') ? 'flex' : 'none';
            };

            document.querySelectorAll('.commentIcon').forEach(commentIcon => {
                commentIcon.addEventListener('click', () => {
                    const commentOption = commentIcon.closest('.post').querySelector('.commentOption');
                    toggleCommentDisplay(commentOption);
                });
            });

            document.querySelectorAll('.commentCross').forEach(commentCross => {
                commentCross.addEventListener('click', () => {
                    const commentOption = commentCross.closest('.commentOption');
                    toggleCommentDisplay(commentOption);
                });
            });

            // Like Unlike code
            const handleLikeButtonClick = async (postId, likeButton) => {
                try {
                    // Toggle the class for heart icon
                    likeButton.classList.toggle('fa-regular');
                    likeButton.classList.toggle('fa-solid');

                    // Add the scale-icon class to trigger the scaling animation
                    likeButton.classList.add('scale-icon');

                    const response = await fetch(`/posts/${postId}/likes`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                    });

                    if (!response.ok) {
                        throw new Error('Failed to like/unlike the post');
                    }

                    const responseData = await response.json();

                    const likeCountElement = document.querySelector(`#like-count-${postId}`);
                    if (likeCountElement) {
                        likeCountElement.textContent = responseData.likeCount + ' Likes';
                    }


                } catch (error) {
                    console.error('Error:', error.message);
                }
            };

            document.querySelectorAll('.like-button').forEach(likeButton => {
                likeButton.addEventListener('click', async (event) => {
                    event.preventDefault(); // Prevent the default behavior of the anchor tag
                    const postId = likeButton.dataset.postId;
                    await handleLikeButtonClick(postId, likeButton);
                });
            });
        });
    </script>
</body>

</html>
